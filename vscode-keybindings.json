// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "shift+alt+up",
        "command": "-editor.action.copyLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+t",
        "command": "-git.sync"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-git.pushTo",
        "when": "!inDebugMode && !terminalFocus"
    },
    {
        "key": "ctrl+b",
        "command": "-workbench.action.toggleSidebarVisibility"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.toggleSidebarVisibility",
        "when": "!editorFocus"
    },
    {
        "key": "alt+4",
        "command": "workbench.scm.focus"
    },
    {
        "key": "shift+alt+e",
        "command": "revealFileInOS"
    },
    {
        "key": "shift+alt+r",
        "command": "-revealFileInOS",
        "when": "!editorFocus"
    },
    {
        "key": "alt+f1",
        "command": "-editor.action.showAccessibilityHelp"
    },
    {
        "key": "shift+alt+1",
        "command": "workbench.files.action.showActiveFileInExplorer"
    },
    {
        "key": "ctrl+h",
        "command": "-editor.action.startFindReplaceAction",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+w",
        "command": "-editor.action.smartSelect.grow",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+oem_3",
        "command": "-workbench.action.selectTheme"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchEditorWholeWord",
        "when": "inSearchEditor && searchInputBoxFocus"
    },
    {
        "key": "alt+w",
        "command": "-workbench.action.terminal.toggleFindWholeWord",
        "when": "terminalFindFocused && terminalProcessSupported || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+w",
        "command": "-toggleFindWholeWord",
        "when": "editorFocus"
    },
    {
        "key": "alt+w",
        "command": "-toggleSearchWholeWord",
        "when": "searchViewletFocus"
    },
    {
        "key": "ctrl+n",
        "command": "workbench.action.newWindow",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.newWindow"
    },
    {
        "key": "alt+d",
        "command": "breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "-breadcrumbs.focusAndSelect",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "ctrl+shift+n",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+k ctrl+n",
        "command": "-git.unstageSelectedRanges",
        "when": "isInDiffEditor"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "ctrl+alt+up",
        "command": "-editor.action.insertCursorAbove",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+down",
        "command": "-editor.action.insertCursorBelow",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.moveEditorToNextGroup"
    },
    {
        "key": "alt+oem_4",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+right",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "alt+oem_6",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPrevious",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.newInActiveWorkspace",
        "when": "terminalFocus"
    },
    {
        "key": "alt+oem_2",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+oem_3",
        "command": "-workbench.action.terminal.new"
    },
    {
        "key": "alt+oem_period alt+i",
        "command": "workbench.action.terminal.resizePaneUp",
        "when": "terminalFocus"
    },
    {
        "key": "alt+oem_period alt+k",
        "command": "workbench.action.terminal.resizePaneDown",
        "when": "terminalFocus"
    },
    {
        "key": "alt+oem_period alt+l",
        "command": "workbench.action.terminal.resizePaneRight",
        "when": "terminalFocus"
    },
    {
        "key": "alt+oem_period alt+j",
        "command": "workbench.action.terminal.resizePaneLeft",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.terminal.relaunch",
        "when": "terminalFocus"
    },
    {
        "key": "alt+delete",
        "command": "workbench.action.terminal.focus",
        "when": "terminalProcessSupported && !terminalFocus"
    },
    {
        "key": "alt+f12",
        "command": "-workbench.action.terminal.focus",
        "when": "terminalProcessSupported && !terminalFocus"
    },
    {
        "key": "alt+n alt+c",
        "command": "workbench.action.duplicateWorkspaceInNewWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-editor.action.smartSelect.shrink",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+t",
        "command": "workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+shift+t",
        "command": "-workbench.action.reopenClosedEditor"
    },
    {
        "key": "ctrl+alt+oem_2",
        "command": "workbench.action.closeEditorsInGroup",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+k w",
        "command": "-workbench.action.closeEditorsInGroup"
    },
    {
        "key": "ctrl+shift+oem_2",
        "command": "workbench.action.closeOtherEditors",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+k ctrl+w",
        "command": "-workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+k ctrl+shift+w",
        "command": "-workbench.action.closeAllGroups"
    },
    {
        "key": "ctrl+k u",
        "command": "-workbench.action.closeUnmodifiedEditors"
    },
    {
        "key": "alt+up",
        "command": "workbench.action.focusAboveGroup",
        "when": "activeEditorGroupEmpty || editorFocus || inSettingsEditor || inKeybindings"
    },
    {
        "key": "ctrl+k ctrl+up",
        "command": "-workbench.action.focusAboveGroup"
    },
    {
        "key": "alt+down",
        "command": "workbench.action.focusBelowGroup",
        "when": "activeEditorGroupEmpty || editorFocus || inSettingsEditor || inKeybindings"
    },
    {
        "key": "ctrl+k ctrl+down",
        "command": "-workbench.action.focusBelowGroup"
    },
    {
        "key": "alt+right",
        "command": "workbench.action.focusRightGroup",
        "when": "activeEditorGroupEmpty || editorFocus || inSettingsEditor || inKeybindings"
    },
    {
        "key": "ctrl+k ctrl+right",
        "command": "-workbench.action.focusRightGroup"
    },
    {
        "key": "alt+left",
        "command": "workbench.action.focusLeftGroup",
        "when": "activeEditorGroupEmpty || editorFocus || inSettingsEditor || inKeybindings"
    },
    {
        "key": "ctrl+k ctrl+left",
        "command": "-workbench.action.focusLeftGroup"
    },
    {
        "key": "ctrl+shift+f12",
        "command": "-workbench.action.maximizeEditor"
    },
    {
        "key": "ctrl+oem_comma",
        "command": "workbench.action.newGroupBelow",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+oem_period",
        "command": "workbench.action.newGroupRight",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "alt+oem_2",
        "command": "workbench.action.closeEditorsAndGroup",
        "when": "activeEditorGroupEmpty || editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+shift+oem_comma",
        "command": "-editor.action.inPlaceReplace.up",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "-editor.action.inPlaceReplace.down",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_period",
        "command": "-breadcrumbs.toggleToOn",
        "when": "!config.breadcrumbs.enabled"
    },
    {
        "key": "ctrl+shift+oem_2",
        "command": "-editor.action.blockComment",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_1",
        "command": "-breadcrumbs.focus",
        "when": "breadcrumbsPossible"
    },
    {
        "key": "alt+oem_period alt+up",
        "command": "workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "ctrl+k up",
        "command": "-workbench.action.moveActiveEditorGroupUp"
    },
    {
        "key": "alt+oem_period alt+down",
        "command": "workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "ctrl+k down",
        "command": "-workbench.action.moveActiveEditorGroupDown"
    },
    {
        "key": "alt+oem_period alt+right",
        "command": "workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "ctrl+k right",
        "command": "-workbench.action.moveActiveEditorGroupRight"
    },
    {
        "key": "alt+oem_period alt+left",
        "command": "workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+k left",
        "command": "-workbench.action.moveActiveEditorGroupLeft"
    },
    {
        "key": "ctrl+alt+left",
        "command": "-workbench.action.moveEditorToPreviousGroup"
    },
    {
        "key": "alt+pageup",
        "command": "-scrollPageUp",
        "when": "textInputFocus"
    },
    {
        "key": "alt+pagedown",
        "command": "-scrollPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+oem_4",
        "command": "workbench.action.navigateBack"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.navigateBack"
    },
    {
        "key": "ctrl+oem_6",
        "command": "workbench.action.navigateForward"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "alt+right",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+w",
        "command": "workbench.action.terminal.kill",
        "when": "terminalFocus"
    },
    {
        "key": "alt+t alt+up",
        "command": "workbench.action.moveEditorToAboveGroup"
    },
    {
        "key": "alt+t alt+down",
        "command": "workbench.action.moveEditorToBelowGroup"
    },
    {
        "key": "alt+t alt+right",
        "command": "workbench.action.moveEditorToRightGroup"
    },
    {
        "key": "alt+t alt+left",
        "command": "workbench.action.moveEditorToLeftGroup"
    },
    {
        "key": "alt+d",
        "command": "search.action.focusQueryEditorWidget",
        "when": "inSearchEditor"
    },
    {
        "key": "escape",
        "command": "-search.action.focusQueryEditorWidget",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "decreaseSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+oem_minus",
        "command": "-decreaseSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "increaseSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+oem_plus",
        "command": "-increaseSearchEditorContextLines",
        "when": "inSearchEditor"
    },
    {
        "key": "f5",
        "command": "rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-rerunSearchEditorSearch",
        "when": "inSearchEditor"
    },
    {
        "key": "alt+t alt+oem_6",
        "command": "workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "ctrl+shift+pagedown",
        "command": "-workbench.action.moveEditorRightInGroup"
    },
    {
        "key": "alt+t alt+oem_4",
        "command": "workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+shift+pageup",
        "command": "-workbench.action.moveEditorLeftInGroup"
    },
    {
        "key": "ctrl+alt+pageup",
        "command": "-workbench.action.terminal.scrollUp",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+alt+pagedown",
        "command": "-workbench.action.terminal.scrollDown",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "pageup",
        "command": "workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+pageup",
        "command": "-workbench.action.terminal.scrollUpPage",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "pagedown",
        "command": "workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "shift+pagedown",
        "command": "-workbench.action.terminal.scrollDownPage",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+1",
        "command": "workbench.view.explorer"
    },
    {
        "key": "alt+1",
        "command": "-workbench.view.explorer",
        "when": "editorFocus"
    },
    {
        "key": "alt+5",
        "command": "-workbench.action.toggleSidebarVisibility",
        "when": "!editorFocus"
    },
    {
        "key": "alt+5",
        "command": "workbench.view.debug"
    },
    {
        "key": "alt+5",
        "command": "-workbench.view.debug",
        "when": "editorFocus"
    },
    {
        "key": "shift+escape",
        "command": "-workbench.actions.view.problems"
    },
    {
        "key": "shift+escape",
        "command": "-workbench.action.toggleSidebarVisibility",
        "when": "!editorFocus && !inDebugRepl && !problemFocus && !terminalFocus"
    },
    {
        "key": "shift+escape",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "debuggersAvailable"
    },
    {
        "key": "alt+delete",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "alt+f12",
        "command": "-workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "shift+escape",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "ctrl+oem_3",
        "command": "-workbench.action.terminal.toggleTerminal"
    },
    {
        "key": "alt+8",
        "command": "workbench.action.output.toggleOutput"
    },
    {
        "key": "ctrl+shift+u",
        "command": "-workbench.action.output.toggleOutput"
    },
    {
        "key": "shift+escape",
        "command": "workbench.actions.view.problems",
        "when": "activePanel == 'workbench.panel.markers'"
    },
    {
        "key": "ctrl+shift+m",
        "command": "-workbench.actions.view.problems"
    },
    {
        "key": "alt+9",
        "command": "-workbench.action.toggleSidebarVisibility",
        "when": "!editorFocus"
    },
    {
        "key": "shift+escape",
        "command": "workbench.debug.action.toggleRepl",
        "when": "activePanel == 'workbench.panel.repl'"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-workbench.debug.action.toggleRepl",
        "when": "debuggersAvailable"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.toggleSidebarVisibility",
        "when": "activePanel != 'terminal' && activePanel != 'workbench.panel.markers' && activePanel != 'workbench.panel.output' && activePanel != 'workbench.panel.repl'"
    },
    {
        "key": "ctrl+pagedown",
        "command": "-workbench.action.nextEditor"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "shift+alt+up",
        "command": "-editor.action.moveLinesUpAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.moveLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+h",
        "command": "-git.viewFileHistory"
    },
    {
        "key": "ctrl+k down",
        "command": "editor.action.insertCursorBelow"
    },
    {
        "key": "ctrl+shift+f",
        "command": "search.action.openEditor"
    },
    {
        "key": "ctrl+6",
        "command": "editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+r",
        "command": "-editor.action.refactor",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+3",
        "command": "-workbench.action.toggleSidebarVisibility",
        "when": "searchViewletVisible"
    },
    {
        "key": "alt+3",
        "command": "-workbench.view.search",
        "when": "!searchViewletVisible"
    },
    {
        "key": "alt+0",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.closePanel",
        "when": "panelFocus"
    },
    {
        "key": "alt+2",
        "command": "-workbench.action.openEditorAtIndex2"
    },
    {
        "key": "ctrl+alt+r",
        "command": "git.pull"
    },
    {
        "key": "alt+6",
        "command": "workbench.view.extension.todo-tree-container"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openFile"
    },
    {
        "key": "ctrl+o",
        "command": "-workbench.action.files.openLocalFile",
        "when": "remoteFileDialogVisible"
    },
    {
        "key": "ctrl+o",
        "command": "editor.action.triggerSuggest",
        "when": "editorHasCompletionItemProvider && textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+p",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+b",
        "command": "-editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "alt+b",
        "command": "-gitlens.toggleFileBlame",
        "when": "editorTextFocus && config.gitlens.keymap == 'alternate' && gitlens:activeFileStatus =~ /blameable/"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "alt+b",
        "command": "editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "alt+f12",
        "command": "-editor.action.peekDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+m",
        "command": "-editor.action.codeAction",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+u",
        "command": "git.push"
    },
    {
        "key": "f4",
        "command": "-goToNextReference",
        "when": "inReferenceSearchEditor || referenceSearchVisible"
    },
    {
        "key": "f4",
        "command": "-editor.action.goToDeclaration",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "f4",
        "command": "-references-view.next",
        "when": "reference-list.hasResult && references-view.canNavigate"
    },
    {
        "key": "f4",
        "command": "-search.action.focusNextSearchResult",
        "when": "hasSearchResult || inSearchEditor"
    },
    {
        "key": "alt+w",
        "command": "workbench.action.closeWindow"
    },
    {
        "key": "ctrl+shift+w",
        "command": "-workbench.action.closeWindow"
    },
    {
        "key": "alt+left",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+pageup",
        "command": "-workbench.action.previousEditor"
    },
    {
        "key": "ctrl+9",
        "command": "-workbench.action.lastEditorInGroup"
    },
    {
        "key": "ctrl+k ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "alt+oem_6",
        "command": "workbench.action.nextEditorInGroup",
        "when": "editorFocus || inSettingsEditor || inKeybindings"
    },
    {
        "key": "ctrl+k ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "ctrl+shift+q",
        "command": "editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+q",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+i",
        "command": "-editor.action.showHover",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+oem_plus",
        "command": "-editor.unfoldRecursively",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "ctrl+alt+numpad_add",
        "command": "-editor.unfoldRecursively",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "ctrl+alt+oem_minus",
        "command": "-editor.foldRecursively",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "ctrl+alt+numpad_subtract",
        "command": "-editor.foldRecursively",
        "when": "editorFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_5",
        "command": "-editor.action.jumpToBracket",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+b",
        "command": "editor.action.revealDefinition",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+b",
        "command": "editor.action.goToImplementation",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+b",
        "command": "-editor.action.goToImplementation",
        "when": "editorHasImplementationProvider && editorTextFocus && !isInEmbeddedEditor"
    },
    {
        "key": "f8",
        "command": "editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+f8",
        "command": "-editor.action.marker.next",
        "when": "editorFocus"
    },
    {
        "key": "alt+enter",
        "command": "-editor.action.selectAllMatches",
        "when": "editorFocus && findWidgetVisible"
    },
    {
        "key": "alt+oem_3",
        "command": "workbench.action.switchWindow"
    },
    {
        "key": "ctrl+t",
        "command": "explorer.newFile",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+shift+n",
        "command": "explorer.newFolder",
        "when": "explorerViewletFocus"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+alt+oem_period ctrl+alt+m",
        "command": "workbench.action.joinAllGroups"
    },
    {
        "key": "alt+oem_period alt+m",
        "command": "workbench.action.joinTwoGroups"
    },
    {
        "key": "alt+f12",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+capslock",
        "command": "editor.action.transformToUppercase",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+capslock",
        "command": "editor.action.transformToLowercase",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "git-graph.view"
    },
    {
        "key": "ctrl+k o",
        "command": "-workbench.action.files.showOpenedFileInNewWindow",
        "when": "emptyWorkspaceSupport"
    },
    {
        "key": "alt+t alt+oem_period",
        "command": "workbench.action.splitEditor",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+oem_5",
        "command": "-workbench.action.splitEditor"
    },
    {
        "key": "alt+t alt+oem_comma",
        "command": "workbench.action.splitEditorOrthogonal",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "ctrl+k ctrl+oem_5",
        "command": "-workbench.action.splitEditorOrthogonal"
    },
    {
        "key": "shift+f12",
        "command": "editor.action.goToReferences",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+f12",
        "command": "-editor.action.goToReferences",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor && !isInEmbeddedEditor"
    },
    {
        "key": "ctrl+alt+f7",
        "command": "editor.action.referenceSearch.trigger",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+f7",
        "command": "-editor.action.referenceSearch.trigger",
        "when": "editorHasReferenceProvider && editorTextFocus && !inReferenceSearchEditor"
    },
    {
        "key": "ctrl+oem_3",
        "command": "workbench.action.quickOpenTerm",
        "when": "terminalFocus"
    },
    {
        "key": "ctrl+alt+oem_3",
        "command": "workbench.action.quickSwitchWindow"
    },
    {
        "key": "ctrl+alt+k",
        "command": "git.commitAll"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-git.commitAll",
        "when": "!inDebugMode && !terminalFocus"
    },
    {
        "key": "ctrl+p",
        "command": "editor.action.triggerParameterHints",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+p",
        "command": "-editor.action.triggerParameterHints",
        "when": "editorHasSignatureHelpProvider && editorTextFocus"
    },
    {
        "key": "alt+i",
        "command": "workbench.action.openGlobalSettings"
    },
    {
        "key": "ctrl+r",
        "command": "editor.action.startFindReplaceAction"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument",
        "when": "editorHasDocumentFormattingProvider && editorTextFocus && !editorReadonly && !inCompositeEditor"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "shift+alt+f",
        "command": "-editor.action.formatDocument.none",
        "when": "editorTextFocus && !editorHasDocumentFormattingProvider && !editorReadonly"
    },
    {
        "key": "ctrl+alt+l",
        "command": "editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k ctrl+f",
        "command": "-editor.action.formatSelection",
        "when": "editorHasDocumentSelectionFormattingProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+j",
        "command": "editor.action.joinLines"
    },
    {
        "key": "alt+enter",
        "command": "editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_period",
        "command": "-editor.action.quickFix",
        "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+0",
        "command": "-editor.foldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+y",
        "command": "editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-editor.action.deleteLines",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "alt+t alt+oem_period",
        "command": "workbench.action.splitEditorRight",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "alt+t alt+oem_comma",
        "command": "workbench.action.splitEditorDown",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "alt+oem_period alt+c",
        "command": "workbench.action.duplicateActiveEditorGroupRight"
    },
    {
        "key": "alt+oem_comma alt+c",
        "command": "workbench.action.duplicateActiveEditorGroupDown"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.saveFiles"
    },
    {
        "key": "f4",
        "command": "editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+f3",
        "command": "-editor.action.dirtydiff.next",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+f4",
        "command": "editor.action.dirtydiff.previous",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+f3",
        "command": "-editor.action.dirtydiff.previous",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+up",
        "command": "editor.action.moveLinesUpAction"
    },
    {
        "key": "ctrl+shift+down",
        "command": "editor.action.moveLinesDownAction"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+alt+down",
        "command": "-editor.action.copyLinesDownAction",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+tab",
        "command": "editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly && !hasPrevTabstop"
    },
    {
        "key": "ctrl+oem_4",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+enter",
        "command": "editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+enter",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_minus",
        "command": "editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "-editor.fold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "shift+insert",
        "command": "workbench.action.terminal.paste",
        "when": "terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+insert",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalFocus && terminalProcessSupported && terminalTextSelected"
    },
    {
        "key": "shift+f4",
        "command": "editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "shift+f7",
        "command": "-editor.action.diffReview.prev",
        "when": "isInDiffEditor"
    },
    {
        "key": "f4",
        "command": "editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "f7",
        "command": "-editor.action.diffReview.next",
        "when": "isInDiffEditor"
    },
    {
        "key": "alt+7",
        "command": "outline.focus"
    },
    {
        "key": "f7",
        "command": "workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "f11",
        "command": "-workbench.action.debug.stepInto",
        "when": "debugState != 'inactive'"
    },
    {
        "key": "shift+f8",
        "command": "workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "shift+f11",
        "command": "-workbench.action.debug.stepOut",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f8",
        "command": "workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f10",
        "command": "-workbench.action.debug.stepOver",
        "when": "debugState == 'stopped'"
    },
    {
        "key": "f9",
        "command": "workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "f5",
        "command": "-workbench.action.debug.continue",
        "when": "inDebugMode"
    },
    {
        "key": "alt+f9",
        "command": "editor.debug.action.runToCursor"
    },
    {
        "key": "alt+f7",
        "command": "references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "shift+alt+f12",
        "command": "-references-view.findReferences",
        "when": "editorHasReferenceProvider"
    },
    {
        "key": "ctrl+2",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly",
        "isAIItem": false
    },
    {
        "key": "f2",
        "command": "-editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "alt+0",
        "command": "workbench.action.problems.focus"
    },
    {
        "key": "shift+escape",
        "command": "workbench.action.output.toggleOutput",
        "when": "activePanel == 'workbench.panel.output'"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.files.newUntitledFile",
        "when": "!explorerViewletFocus"
    },
    {
        "key": "ctrl+n",
        "command": "-workbench.action.files.newUntitledFile"
    },
    {
        "key": "tab",
        "command": "editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly && !hasGPT4Diff && !hasNextTabstop && !inlineSuggestionVisible && !suggestWidgetVisible && !cpp.shouldAcceptTab"
    },
    {
        "key": "ctrl+oem_6",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+oem_plus",
        "command": "editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "-editor.unfold",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+j",
        "command": "-editor.unfoldAll",
        "when": "editorTextFocus && foldingEnabled"
    },
    {
        "key": "ctrl+k ctrl+oem_plus",
        "command": "workbench.action.zoomIn"
    },
    {
        "key": "ctrl+shift+oem_plus",
        "command": "-workbench.action.zoomIn"
    },
    {
        "key": "ctrl+k ctrl+oem_minus",
        "command": "workbench.action.zoomOut"
    },
    {
        "key": "ctrl+shift+oem_minus",
        "command": "-workbench.action.zoomOut"
    },
    {
        "key": "f2",
        "command": "editor.action.rename",
        "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
    },
    {
        "key": "shift+f8",
        "command": "editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "shift+alt+f8",
        "command": "-editor.action.marker.prev",
        "when": "editorFocus"
    },
    {
        "key": "ctrl+shift+r",
        "command": "workbench.action.replaceInFiles"
    },
    {
        "key": "ctrl+shift+h",
        "command": "-workbench.action.replaceInFiles"
    },
    {
        "key": "shift+alt+e",
        "command": "remote-wsl.revealInExplorer",
        "when": "editorFocus && remoteName == 'wsl'"
    },
    {
        "key": "shift+alt+r",
        "command": "-remote-wsl.revealInExplorer",
        "when": "editorFocus && remoteName == 'wsl'"
    },
    {
        "key": "ctrl+k ctrl+alt+k",
        "command": "git.refresh"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-rest-client.request",
        "when": "editorTextFocus && editorLangId == 'plaintext'"
    },
    {
        "key": "ctrl+alt+r",
        "command": "-rest-client.request",
        "when": "editorTextFocus && editorLangId == 'http'"
    },
    {
        "key": "ctrl+shift+b",
        "command": "-workbench.action.tasks.build"
    },
    {
        "key": "ctrl+shift+b",
        "command": "java.action.navigateToSuperImplementation"
    },
    {
        "key": "ctrl+oem_5",
        "command": "bookmarks.toggleLabeled"
    },
    {
        "key": "ctrl+shift+oem_4",
        "command": "bookmarks.jumpToPrevious"
    },
    {
        "key": "ctrl+alt+j",
        "command": "-bookmarks.jumpToPrevious",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+oem_6",
        "command": "bookmarks.jumpToNext"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-bookmarks.jumpToNext",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k ctrl+v",
        "command": "markdown.showPreviewToSide"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown.showPreviewToSide",
        "when": "!notebookEditorFocused && editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+alt+v",
        "command": "markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+k v",
        "command": "-markdown-preview-enhanced.openPreviewToTheSide",
        "when": "editorLangId == 'markdown'"
    },
    {
        "key": "ctrl+alt+p",
        "command": "editor.action.surroundWithSnippet"
    },
    {
        "key": "tab",
        "command": "list.select",
        "when": "listFocus && !inputFocus"
    },
    {
        "key": "tab",
        "command": "onEnterSelectCodeAction",
        "when": "CodeActionMenuVisible"
    },
    {
        "key": "tab",
        "command": "problems.action.open",
        "when": "problemFocus"
    },
    {
        "key": "ctrl+3",
        "command": "workbench.action.gotoSymbol"
    },
    {
        "key": "ctrl+shift+o",
        "command": "-workbench.action.gotoSymbol"
    },
    {
        "key": "alt+oem_5",
        "command": "workbench.view.extension.bookmarks"
    },
    {
        "key": "ctrl+alt+k",
        "command": "-bookmarks.toggle",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+oem_5",
        "command": "bookmarks.toggle"
    },
    {
        "key": "alt+oem_5",
        "command": "bookmarksExplorer.focus"
    },
    {
        "key": "alt+r",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "ctrl+shift+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+g",
        "command": "aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "ctrl+shift+k",
        "command": "-aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    {
        "key": "ctrl+g",
        "command": "-editor.action.simpleInlineDiffs.acceptAll",
        "when": "editorTextFocus && hasDisplayedSimpleDiff"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.terminal.goToRecentDirectory",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "ctrl+shift+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "ctrl+g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "tab",
        "command": "-tab",
        "when": "editorTextFocus && !editorReadonly && !editorTabMovesFocus"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.openNativeConsole",
        "when": "!terminalFocus"
    },
    {
        "key": "tab",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus && !cpp.shouldAcceptTab"
    },
    {
        "key": "tab",
        "command": "-acceptSelectedSuggestion",
        "when": "suggestWidgetHasFocusedSuggestion && suggestWidgetVisible && textInputFocus"
    },
    {
        "key": "ctrl+shift+d",
        "command": "editor.action.inlineDiffs.acceptPartialEdit",
        "when": "editorTextFocus && (arbitrary function)"
    },
    {
        "key": "ctrl+shift+y",
        "command": "-editor.action.inlineDiffs.acceptPartialEdit",
        "when": "editorTextFocus && (arbitrary function)"
    },
    {
        "key": "ctrl+shift+y",
        "command": "editor.action.rejectGPT4",
        "when": "editorTextFocus && hasGPT4Diff"
    },
    {
        "key": "ctrl+n",
        "command": "-editor.action.rejectGPT4",
        "when": "editorTextFocus && hasGPT4Diff"
    },
    {
        "key": "ctrl+shift+y",
        "command": "editor.action.inlineDiffs.rejectPartialEdit",
        "when": "editorTextFocus && (arbitrary function)"
    },
    {
        "key": "ctrl+n",
        "command": "-editor.action.inlineDiffs.rejectPartialEdit",
        "when": "editorTextFocus && (arbitrary function)"
    },
    {
        "key": "alt+3",
        "command": "gitlens.views.fileHistory.focus"
    },
    {
        "key": "alt+3",
        "command": "timeline.focus"
    },
    {
        "key": "ctrl+q",
        "command": "extension.jumpy-word",
        "when": "editorTextFocus"
    },
    {
        "key": "Escape",
        "command": "extension.jumpy-exit",
        "when": "editorTextFocus && jumpy.isJumpyMode"
    },
    {
        "key": "ctrl+i",
        "command": "composerMode.agent"
    },
    {
        "key": "ctrl+i",
        "command": "composerMode.agent"
    },
    {
        "key": "ctrl+t",
        "command": "composer.createNewComposerTab",
        "when": "composerFocused || focusedView =~ /^workbench.panel.aichat.view/"
    },
    {
        "key": "ctrl+t",
        "command": "-composer.createNewComposerTab",
        "when": "composerFocused || focusedView =~ /^workbench.panel.aichat.view/"
    },
    {
        "key": "ctrl+n",
        "command": "-composer.createNew",
        "when": "composerFocused || focusedView =~ /^workbench.panel.aichat.view/"
    },
    {
        "key": "alt+2",
        "command": "composer.startComposerPrompt"
    },
    {
        "key": "ctrl+i",
        "command": "-composer.startComposerPrompt"
    },
    {
        "key": "alt+1",
        "command": "-workbench.action.openEditorAtIndex1"
    },
    {
        "key": "ctrl+1",
        "command": "editor.action.inlineSuggest.acceptNextWord",
        "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "cppSuggestion && !editorReadonly || inlineSuggestionVisible && !editorReadonly"
    },
    {
        "key": "ctrl+alt+l",
        "command": "-httpyac.resend",
        "when": "editorTextFocus && editorLangId in 'httpyac.supportedLanguages'"
    },
    {
        "key": "alt+]",
        "command": "composer.nextChatTab",
        "when": "composerFocused"
    },
    {
        "key": "ctrl+]",
        "command": "-composer.nextChatTab",
        "when": "composerFocused"
    },
    {
        "key": "alt+[",
        "command": "composer.previousChatTab",
        "when": "composerFocused"
    },
    {
        "key": "ctrl+[",
        "command": "-composer.previousChatTab",
        "when": "composerFocused"
    },
    {
        "key": "alt+oem_4",
        "command": "workbench.action.previousEditorInGroup",
        "when": "editorFocus || inSettingsEditor || inKeybindings"
    },
    {
        "key": "ctrl+m ctrl+pageup",
        "command": "-workbench.action.previousEditorInGroup"
    },
    {
        "key": "ctrl+m ctrl+pagedown",
        "command": "-workbench.action.nextEditorInGroup"
    },
    {
        "key": "alt+1",
        "command": "workbench.action.openNextRecentlyUsedEditorInGroup",
        "when": "filesExplorerFocus"
    },
    {
        "key": "f12",
        "command": "-editor.action.revealDefinition",
        "when": "editorHasDefinitionProvider && editorTextFocus"
    },
    {
        "key": "ctrl+alt+n",
        "command": "-httpyac.new"
    },
    {
        "key": "alt+k",
        "command": "workbench.action.openGlobalKeybindings"
    },
    {
        "key": "ctrl+k ctrl+s",
        "command": "-workbench.action.openGlobalKeybindings"
    },
    {
        "key": "f1",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "ctrl+2",
        "command": "workbench.action.terminal.renameActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
    },
    {
        "key": "f2",
        "command": "-workbench.action.terminal.renameActiveTab",
        "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
    },
    {
        "key": "ctrl+2",
        "command": "renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "f2",
        "command": "-renameFile",
        "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
    },
    {
        "key": "ctrl+2",
        "command": "debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "f2",
        "command": "-debug.renameWatchExpression",
        "when": "watchExpressionsFocused"
    },
    {
        "key": "ctrl+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalFocus"
    },
    {
        "key": "shift+alt+oem_3",
        "command": "workbench.action.openRecent"
    },
    {
        "key": "ctrl+oem_3",
        "command": "workbench.action.quickOpen"
    },
    {
        "key": "ctrl+e",
        "command": "-workbench.action.quickOpen"
    },
    {
        "key": "ctrl+r",
        "command": "-workbench.action.openRecent"
    },
    {
        "key": "ctrl+alt+w",
        "command": "workbench.action.closeAllEditors"
    },
    {
        "key": "ctrl+c",
        "command": "workbench.action.terminal.copySelection",
        "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
    },
    {
        "key": "ctrl+shift+c",
        "command": "-workbench.action.terminal.copySelection",
        "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
    },
    {
        "key": "alt+t alt+oem_plus",
        "command": "workbench.action.files.showOpenedFileInNewWindow",
        "when": "emptyWorkspaceSupport"
    },
    {
        "key": "alt+t alt+oem_minus",
        "command": "workbench.action.files.showOpenedFileInNewWindow",
        "when": "emptyWorkspaceSupport"
    },
    {
        "key": "alt+t alt+n",
        "command": "workbench.action.files.showOpenedFileInNewWindow",
        "when": "emptyWorkspaceSupport"
    },
    {
        "key": "alt+t alt+oem_period",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+shift+5",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "alt+oem_period alt+m",
        "command": "workbench.action.terminal.unsplit",
        "when": "terminalFocus"
    },
    {
        "key": "alt+oem_period alt+oem_plus",
        "command": "workbench.action.moveEditorGroupToNewWindow"
    },
    {
        "key": "alt+oem_period alt+n",
        "command": "workbench.action.moveEditorGroupToNewWindow"
    },
    {
        "key": "alt+oem_period alt+oem_minus",
        "command": "workbench.action.moveEditorGroupToNewWindow"
    },
    {
        "key": "alt+t alt+1",
        "command": "workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "shift+alt+1",
        "command": "-workbench.action.moveEditorToFirstGroup"
    },
    {
        "key": "alt+t alt+9",
        "command": "workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "shift+alt+9",
        "command": "-workbench.action.moveEditorToLastGroup"
    },
    {
        "key": "alt+oem_period alt+j",
        "command": "workbench.action.toggleEditorWidths",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "alt+oem_period alt+i",
        "command": "workbench.action.toggleEditorWidths",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "alt+oem_period alt+k",
        "command": "workbench.action.toggleEditorWidths",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "alt+oem_period alt+l",
        "command": "workbench.action.toggleEditorWidths",
        "when": "editorFocus || inKeybindings || inSettingsEditor"
    },
    {
        "key": "insert",
        "command": "keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    },
    {
        "key": "alt+k",
        "command": "-keybindings.editor.recordSearchKeys",
        "when": "inKeybindings && inKeybindingsSearch"
    }
]